@inproceedings{boiman2008defense,
  title={In defense of nearest-neighbor based image classification},
  author={Boiman, Oren and Shechtman, Eli and Irani, Michal},
  booktitle={2008 IEEE conference on computer vision and pattern recognition},
  pages={1--8},
  year={2008},
  organization={IEEE}
}

@inproceedings{bewley2013advantages,
  title={Advantages of exploiting projection structure for segmenting dense 3D point clouds},
  author={Bewley, Alex and Upcroft, Ben},
  booktitle={Australian Conference on Robotics and Automation},
  volume={2},
  year={2013}
}

@article{talib2021systematic,
  title={A systematic literature review on hardware implementation of artificial intelligence algorithms},
  author={Talib, Manar Abu and Majzoub, Sohaib and Nasir, Qassim and Jamal, Dina},
  journal={The Journal of Supercomputing},
  volume={77},
  number={2},
  pages={1897--1938},
  year={2021},
  publisher={Springer}
}

@book{vahid2010digital,
  title={Digital design with RTL design, VHDL, and Verilog},
  author={Vahid, Frank},
  year={2010},
  publisher={John Wiley \& Sons}
}

@ARTICLE{ieee1076-2019,
  author={},
  journal={IEEE Std 1076-2019}, 
  title={IEEE Standard for VHDL Language Reference Manual}, 
  year={2019},
  volume={},
  number={},
  pages={1-673},
  doi={10.1109/IEEESTD.2019.8938196}
}

@ARTICLE{ieee1800-2017,
  author={},
  journal={IEEE Std 1800-2017 (Revision of IEEE Std 1800-2012)}, 
  title={IEEE Standard for SystemVerilog--Unified Hardware Design, Specification, and Verification Language}, 
  year={2018},
  volume={},
  number={},
  pages={1-1315},
  doi={10.1109/IEEESTD.2018.8299595}
}


@inproceedings{mohsin2018fpga,
  title={An FPGA-based hardware accelerator for K-nearest neighbor classification for machine learning on mobile devices},
  author={Mohsin, Mokhles A. and Perera, Darshika G.},
  booktitle={Proceedings of the 9th International Symposium on Highly-Efficient Accelerators and Reconfigurable Technologies},
  pages={1--7},
  year={2018}
}

@inproceedings{ito2018nearest,
  title={A Nearest Neighbor Search Engine Using Distance-Based Hashing},
  author={Ito, Toshitaka and Itotani, Yuri and Wakabayashi, Shin'ichi and Nagayama, Shinobu and Inagi, Masato},
  booktitle={2018 International Conference on Field-Programmable Technology (FPT)},
  pages={150--157},
  year={2018},
  organization={IEEE}
}

@inproceedings{li2016k,
  title={K-nearest neighbor algorithm implementation on FPGA using high level synthesis},
  author={Li, Zhe-Hao and Jin, Ji-Fang and Zhou, Xue-Gong and Feng, Zhi-Hua},
  booktitle={2016 13th IEEE International Conference on Solid-State and Integrated Circuit Technology (ICSICT)},
  pages={600--602},
  year={2016},
  organization={IEEE}
}

@inproceedings{lu2020chip,
  title={CHIP-KNN: A configurable and high-performance k-nearest neighbors accelerator on cloud FPGAs},
  author={Lu, Alec and Fang, Zhenman and Farahpour, Nazanin and Shannon, Lesley},
  booktitle={2020 International Conference on Field-Programmable Technology (ICFPT)},
  pages={139--147},
  year={2020},
  organization={IEEE}
}

@inproceedings{zhang2018efficient,
  title={Efficient large-scale approximate nearest neighbor search on OpenCL FPGA},
  author={Zhang, Jialiang and Khoram, Soroosh and Li, Jing},
  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},
  pages={4924--4932},
  year={2018}
}

@inproceedings{muslim2016energy,
  title={Energy-efficient FPGA Implementation of the k-Nearest Neighbors Algorithm Using OpenCL.},
  author={Muslim, Fahad Bin and Demian, Alexandros and Ma, Liang and Lavagno, Luciano and Qamar, Affaq},
  booktitle={FedCSIS (Position Papers)},
  pages={141--145},
  year={2016}
}

@inproceedings{bachrach2012chisel,
  title={Chisel: Constructing hardware in a Scala embedded language},
  author={Bachrach, Jonathan and Vo, Huy and Richards, Brian and Lee, Yunsup and Waterman, Andrew and Avi{\v{z}}ienis, Rimas and Wawrzynek, John and Asanovi{\'c}, Krste},
  booktitle={DAC Design automation conference 2012},
  pages={1212--1221},
  year={2012},
  organization={IEEE}
}

@article{lee2016agile,
  title={An agile approach to building RISC-V microprocessors},
  author={Lee, Yunsup and Waterman, Andrew and Cook, Henry and Zimmer, Brian and Keller, Ben and Puggelli, Alberto and Kwak, Jaehwa and Jevtic, Ruzica and Bailey, Stevo and Blagojevic, Milovan and others},
  journal={ieee Micro},
  volume={36},
  number={2},
  pages={8--20},
  year={2016},
  publisher={IEEE}
}

@inproceedings{fuchs1980visible,
  title={On visible surface generation by a priori tree structures},
  author={Fuchs, Henry and Kedem, Zvi M. and Naylor, Bruce F.},
  booktitle={Proceedings of the 7th annual conference on Computer graphics and interactive techniques},
  pages={124--133},
  year={1980}
}

@online{kondic2022hardware,
  author = {Кондић, Александар and Миловановић, Владимир},
  title = {Hardware Realization of Nearest Neighbour Search Algorithm over an In-Memory Pre-Stored k-d Tree},
  url = {https://github.com/milovanovic/nns},
  urldate = {2022-09-22},
  organization = {GitHub, Inc.}
}

@online{scalasite,
author = {Martin Odersky},
title = {The Scala Programming Language},
url = {https://www.scala-lang.org/},
urldate = {2022-09-22},
organization = {École Polytechnique Fédérale Lausanne (EPFL)}
}

@online{chiselsite,
    % author = {the Chisel/FIRRTL Developers},
    title = {Chisel/FIRRTL: Home},
    url = {www.chisel-lang.org},
    urldate = {2022-09-22},
    organization = {CHIPS Alliance}
}

@online{vivadosite,
    % author = {Xilinx Design Systems},
    title = {Vivado ML Overview},
    url = {https://www.xilinx.com/products/design-tools/vivado.html},
    urldate = {2022-09-22},
    organization = {Advanced Micro Devices, Inc.}
}

@online{arty7site,
    title = {Artix-7 FPGA Development Board - Digilent Arty A7 - Xilinx},
    url = {https://digilent.com/shop/arty-a7-artix-7-fpga-development-board/},
    urldate = {2022-09-22},
    organization = {Digilent}
}

@online{artix7site,
    % author = {Xilinx Design Systems},
    title = {Artix-7 FPGA Family},
    url = {https://www.xilinx.com/products/silicon-devices/fpga/artix-7.html},
    urldate = {2022-09-22},
    organization = {Advanced Micro Devices, Inc.}
}

@online{counterimplementation,
    title = {chisel3/Counter.scala at master · chipsalliance/chisel3},
    url = {https://github.com/chipsalliance/chisel3/blob/master/src/main/scala/chisel3/util/Counter.scala},
    urldate = {2022-09-22},
    organization = {GitHub, Inc.}
}

@online{whenimplementation,
    title = {chisel3/When.scala at master · chipsalliance/chisel3},
    url = {https://github.com/chipsalliance/chisel3/blob/master/core/src/main/scala/chisel3/When.scala},
    urldate = {2022-09-22},
    organization = {GitHub, Inc.}
}

@incollection{stroud20091,
    title = {CHAPTER 1 - Introduction},
    editor = {Laung-Terng Wang and Yao-Wen Chang and Kwang-Ting (Tim) Cheng},
    booktitle = {Electronic Design Automation},
    publisher = {Morgan Kaufmann},
    address = {Boston},
    pages = {1-38},
    year = {2009},
    isbn = {978-0-12-374364-0},
    doi = {https://doi.org/10.1016/B978-0-12-374364-0.50008-4},
    author = {Charles E. Stroud and Laung-Terng (L.-T.) Wang and Yao-Wen Chang},
    abstract = {Publisher Summary
    This chapter gives a detailed introduction to the various types and uses of Electronic design automation (EDA). It begins with an overview of EDA, including some historical perspectives, followed by a more detailed discussion of various aspects of logic design, synthesis, verification, and test. The important and essential process of physical design automation is discussed as well. Given an electronic system modeled at the electronic system level (ESL), EDA automates the design and test processes of verifying the correctness of the ESL design against the specifications of the electronic system, taking the ESL design through various synthesis and verification steps, and finally testing the manufactured electronic system to ensure that it meets the specifications and quality requirements of the electronic system. The electronic system can also be a printed circuit board (PCB) or simply an integrated circuit (IC). EDA comprises a set of hardware and software codesign, synthesis, verification, and test tools that check the ESL design, translate the corrected ESL design to a register-transfer level (RTL), and then takes the RTL design through the synthesis and verification stages at the gate level and switch level to eventually produce a physical design described in graphics data system II (GDSII) format that is ready to signoff for fabrication and manufacturing test. EDA can be viewed as a collection of design automation and test automation tools that automate the design and test tasks, respectively. The test automation tools manage the quality aspects of the electronic system, be it defect level, test cost, or ease of self-test and diagnosis.}
}

@online{chiseltest,
    title = {ucb-bar/chiseltest: The official testing library for Chisel circuits.},
    url = {https://github.com/ucb-bar/chiseltest},
    urldate = {2022-09-22},
    organization = {GitHub, Inc.}
}

@online{scalateststyles,
    title = {ScalaTest---Selecting testing styles for your project},
    url = {https://www.scalatest.org/user_guide/selecting_a_style},
    urldate = {2022-09-22},
    organization = {Artima, Inc.}
}

@inproceedings{thepaper,
    author = {Kondi\'{c}, Aleksandar Z. and Milovanovi\'{c}, Vladmir M.},
    booktitle = {\foreignlanguage{english}{PROCEEDINGS IX International Conference IcETRAN and LXVI ETRAN Conference, Novi Pazar, Serbia, 6--9, June, 2022.}},
    title = {Hardware Realization of Nearest Neighbour Search Algorithm over an In-Memory Pre-Stored $k$-d Tree},
    year = {2022},
    month = {6},
    pages = {1-6},
    abstract = {Nearest neighbour search is a fundamental statistical classification algorithm with widespread use in artificial intelligence (AI) sub-fields such as machine learning, computer vision, and robotics. Considering the shift in host platforms running AI algorithms from general-purpose computers to specialized hardware implementations, a parameterizable design generator of special purpose hardware instances that perform nearest neighbour search is proposed, captured inside Chisel hardware construction language, and validated on an FPGA platform. Based on an algorithm of nearest neighbour search that traverses a k-dimensional tree pre-stored inside read-only memory (ROM), the generator provides parameters for configuring the structure and volume of the tree and the points stored within it.},
    isbn = {978-86-7466-930-3},
    url = {https://www.etran.rs/2022/zbornik/ICETRAN-22_radovi/041-ELI1.4.pdf},
    urldate = {2022-09-22},
    publisher = {Academic Mind, Belgrade},
    address = {Kneza Milosa 9/IV, 11000 Belgrade},
    organization = {ETRAN Society, Belgrade},
    keywords = {paper}
}

@online{firrtl,
    title = {chipsalliance/firrtl: Flexible Intermediate Representation for RTL},
    url = {https://github.com/chipsalliance/firrtl},
    urldate = {2022-09-22},
    organization = {GitHub, Inc.}
}

@mastersthesis{marija2017implementacija,
  author  = {Марија Петровић},
  title   = {Имплементација конфигурабилног FFT блока на FPGA платформи коришћењем \emph{Chisel} језика},
  school  = {Електротехнички факултет Универзитета у Београду},
  year    = {2017},
  address = {Булевар краља Александра 73, 11120 Београд, Србија},
  month   = {09},
}

@online{llvm,
    title = {The LLVM Compiler Infrastructure Project},
    url = {https://llvm.org/},
    urldate = {2022-09-22},
    organization = {LLVM Foundation}
}

@online{chiselresets,
    title = {Chisel/FIRRTL: Reset},
    url = {https://www.chisel-lang.org/chisel3/docs/explanations/reset.html},
    urldate = {2022-09-22},
    organization = {CHIPS Alliance}
}